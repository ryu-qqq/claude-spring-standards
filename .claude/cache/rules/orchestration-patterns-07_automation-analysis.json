{
  "id": "orchestration-patterns-07_automation-analysis",
  "sourceFile": "/Users/sangwon-ryu/claude-spring-standards/docs/coding_convention/09-orchestration-patterns/07_automation-analysis.md",
  "metadata": {
    "keywords": {
      "primary": [
        "automation",
        "analysis"
      ],
      "secondary": [
        "07",
        "automation",
        "analysis",
        "orchestration",
        "pattern",
        "자동화",
        "분석"
      ],
      "anti": []
    },
    "layer": "general",
    "priority": "critical",
    "tokenEstimate": 4492
  },
  "rules": {
    "prohibited": [
      "❌ **executeInternal 내 @Transactional**: 트랜잭션 밖에서 실행",
      "❌ **IdemKey 없이 Operation 생성**: 멱등성 필수",
      "❌ **Outcome 대신 boolean/Exception**: Sealed interface 사용",
      "❌ **Finalizer/Reaper 없이 Orchestrator**: Recovery 필수"
    ],
    "allowed": [
      "✅ **Command Record**: 불변 객체, Compact Constructor 검증",
      "✅ **BaseOrchestrator 상속**: accept/execute/finalize 재사용",
      "✅ **IdemKey Unique 제약**: DB level 중복 차단",
      "✅ **WAL PENDING 처리**: Finalizer가 자동 복구",
      "✅ **Timeout 처리**: Reaper가 MAX_ATTEMPTS 초과 시 TIMEOUT",
      "✅ Transaction 경계: executeInternal이 @Async인가?",
      "✅ Lombok 금지: Record 패턴 사용했는가?",
      "✅ Javadoc 필수: @author, @since 있는가?",
      "✅ Long FK 전략: Entity에 관계 어노테이션 없는가?",
      "✅ Idempotency: IdemKey Unique 제약 있는가?"
    ]
  },
  "documentation": {
    "path": "docs/coding_convention/09-orchestration-patterns/07_automation-analysis.md",
    "summary": "Auto-generated from 07_automation-analysis.md"
  }
}