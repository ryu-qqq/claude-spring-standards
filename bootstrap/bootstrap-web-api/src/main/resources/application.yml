# ===============================================
# Spring Boot Web API Application Configuration
# ===============================================
# Spring Boot 3.5.x + Java 21 기준
# Bootstrap 모듈 - 실행 가능한 애플리케이션 설정
#
# @author windsurf
# @since 1.0.0
# ===============================================

# ===============================================
# Server Configuration (Tomcat)
# ===============================================
server:
  port: 8080

  # Tomcat 서블릿 컨테이너 설정
  tomcat:
    # 스레드풀 설정
    threads:
      # 최소 스레드 수 (항상 살아있는 스레드)
      min-spare: 10
      # 최대 스레드 수 (동시 처리 가능한 최대 요청 수)
      # CPU 코어 수 * 2 ~ 4 권장
      max: 200

    # 커넥션 설정
    connection-timeout: 20s  # 커넥션 타임아웃 (읽기 대기 시간)
    keep-alive-timeout: 60s  # Keep-Alive 타임아웃

    # 큐 설정
    accept-count: 100  # 대기 큐 크기 (max threads 초과 시 대기)

    # 최대 커넥션 수
    max-connections: 8192  # NIO 커넥터 기본값

  # Graceful Shutdown (Spring Boot 2.3+)
  shutdown: graceful  # 진행 중인 요청 완료 후 종료

# ===============================================
# Spring Configuration
# ===============================================
spring:
  application:
    name: spring-standards-rest-api

  # Profile 설정
  profiles:
    active: local  # local, dev, stage, prod

  # ===============================================
  # MessageSource (i18n)
  # ===============================================
  messages:
    # 메시지 번들 베이스 이름 (messages_{locale}.properties 로딩)
    basename: messages
    # 한글 깨짐 방지: UTF-8 고정
    encoding: UTF-8
    # 서버 시스템 로케일에 의존하지 않음
    fallback-to-system-locale: false

  # ===============================================
  # Jackson (JSON 직렬화/역직렬화)
  # ===============================================
  jackson:
    # 날짜/시간 포맷
    date-format: yyyy-MM-dd'T'HH:mm:ss
    time-zone: Asia/Seoul

    # Serialization 설정
    serialization:
      # ISO-8601 포맷 사용 (타임스탬프 숫자 대신)
      WRITE_DATES_AS_TIMESTAMPS: false
      # 빈 객체 직렬화 허용
      FAIL_ON_EMPTY_BEANS: false
      # 들여쓰기 (개발 환경에서만)
      INDENT_OUTPUT: false

    # Deserialization 설정
    deserialization:
      # 알 수 없는 필드 무시 (API 버전 호환성)
      FAIL_ON_UNKNOWN_PROPERTIES: false
      # 빈 문자열을 null로 처리
      ACCEPT_EMPTY_STRING_AS_NULL_OBJECT: true

    # Default Property Inclusion
    default-property-inclusion: non_null  # null 필드 제외

    # Locale 설정
    locale: ko_KR

  # ===============================================
  # Validation
  # ===============================================
  validation:
    # Fail Fast 모드 (첫 번째 에러에서 중단)
    fail-fast: false  # 모든 에러 수집

  # ===============================================
  # Web Configuration
  # ===============================================
  web:
    # Locale 설정
    locale: ko_KR
    locale-resolver: fixed  # 고정 로케일

  # ===============================================
  # MVC Configuration
  # ===============================================
  mvc:
    # Content Negotiation
    contentnegotiation:
      favor-parameter: false  # URL 파라미터로 Content-Type 결정 비활성화
      favor-path-extension: false  # 확장자로 Content-Type 결정 비활성화

    # PathMatch 설정
    pathmatch:
      matching-strategy: ant_path_matcher  # Ant 스타일 패턴 매칭

    # Throw Exception if No Handler Found
    throw-exception-if-no-handler-found: true

  # ===============================================
  # Flyway Migration
  # ===============================================
  flyway:
    # Flyway 활성화
    enabled: true
    
    # 마이그레이션 스크립트 위치
    # classpath: 리소스 디렉토리 내 경로
    # filesystem: 파일 시스템 절대 경로
    locations: classpath:db/migration
    
    # 베이스라인 설정
    # baseline-on-migrate: 기존 DB에 Flyway 적용 시 true
    # baseline-version: 베이스라인 버전 (기존 스키마의 버전)
    baseline-on-migrate: true
    baseline-version: 0
    
    # 마이그레이션 검증
    # validate-on-migrate: 마이그레이션 전 검증 수행
    validate-on-migrate: true
    
    # Out of Order 마이그레이션 허용
    # out-of-order: 순서가 맞지 않는 마이그레이션 허용 (개발 환경)
    out-of-order: false
    
    # 스키마 설정
    # default-schema: 기본 스키마 (미지정 시 DB 기본값)
    # schemas: 관리할 스키마 목록
    # default-schema: spring_standards
    
    # 테이블 설정
    # table: Flyway 메타데이터 테이블명 (기본: flyway_schema_history)
    table: flyway_schema_history
    
    # SQL 마이그레이션 설정
    # sql-migration-prefix: SQL 파일 접두사 (기본: V)
    # sql-migration-separator: 버전과 설명 구분자 (기본: __)
    # sql-migration-suffixes: SQL 파일 확장자 (기본: .sql)
    sql-migration-prefix: V
    sql-migration-separator: __
    sql-migration-suffixes: .sql
    
    # Placeholder 설정
    # placeholder-replacement: SQL 내 플레이스홀더 치환 활성화
    # placeholders: 플레이스홀더 값 정의
    placeholder-replacement: true
    placeholders:
      database: spring_standards
      charset: utf8mb4
      collation: utf8mb4_unicode_ci
    
    # 클린 설정 (주의: 프로덕션에서는 절대 사용 금지)
    # clean-disabled: clean 명령 비활성화 (프로덕션 필수)
    clean-disabled: true
    
    # 마이그레이션 실패 시 동작
    # fail-on-missing-locations: 마이그레이션 위치 없을 시 실패
    fail-on-missing-locations: true

# ===============================================
# Management & Actuator (모니터링)
# ===============================================
management:
  endpoints:
    web:
      exposure:
        # Actuator 엔드포인트 노출 (프로덕션에서는 제한 필요)
        include: health,info,metrics,prometheus
      base-path: /actuator

  endpoint:
    health:
      show-details: when-authorized  # 인증된 사용자에게만 상세 정보 노출

  metrics:
    export:
      prometheus:
        enabled: true  # Prometheus 메트릭 노출

# ===============================================
# Logging Configuration
# ===============================================
logging:
  level:
    # Root 로거
    root: INFO

    # Application 로거
    com.ryuqq: DEBUG

    # Spring Framework
    org.springframework.web: INFO
    org.springframework.security: INFO

    # Hibernate (JPA)
    org.hibernate.SQL: DEBUG  # SQL 쿼리 로깅
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # 바인딩 파라미터 로깅

    # Tomcat
    org.apache.tomcat: INFO
    org.apache.catalina: INFO

  # 로그 패턴
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

  # 로그 파일 설정 (프로덕션)
  file:
    name: logs/application.log
    max-size: 10MB  # 파일 최대 크기
    max-history: 30  # 보관 일수

# ===============================================
# Profile-Specific Configurations
# ===============================================
---
# Local 환경
spring:
  config:
    activate:
      on-profile: local

logging:
  level:
    root: DEBUG
    com.ryuqq: TRACE

server:
  tomcat:
    threads:
      max: 50  # 로컬에서는 스레드 수 제한

---
# Development 환경
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    root: DEBUG
    com.ryuqq: DEBUG

server:
  tomcat:
    threads:
      max: 100

---
# Production 환경
spring:
  config:
    activate:
      on-profile: prod

logging:
  level:
    root: WARN
    com.ryuqq: INFO
    org.hibernate.SQL: WARN

server:
  tomcat:
    threads:
      max: 200

  # Graceful Shutdown Timeout
  graceful-shutdown-timeout: 30s

management:
  endpoints:
    web:
      exposure:
        # 프로덕션에서는 health, metrics만 노출
        include: health,metrics
